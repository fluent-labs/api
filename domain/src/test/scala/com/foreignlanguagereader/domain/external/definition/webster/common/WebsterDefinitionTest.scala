package com.foreignlanguagereader.domain.external.definition.webster.common

import org.scalatest.funspec.AnyFunSpec
import play.api.libs.json.Json

class WebsterDefinitionTest extends AnyFunSpec {
  describe("a definition") {
    val webster =
      "{\"sseq\":[[[\"sense\",{\"sn\":\"1 a\",\"dt\":[[\"text\",\"{bc}to suddenly break open or come away from something often with a short, loud noise \"],[\"wsgram\",\"no obj\"],[\"vis\",[{\"t\":\"The balloon {it}popped{/it}. [={it}burst{/it}]\"},{\"t\":\"We heard the sound of corks {it}popping{/it} as the celebration began.\"},{\"t\":\"One of the buttons {it}popped{/it} off my sweater.\"}]],[\"wsgram\",\"+ obj\"],[\"vis\",[{\"t\":\"Don't {it}pop{/it} that balloon!\"},{\"t\":\"She {it}popped{/it} the cork on the champagne. [=she opened the bottle of champagne by removing the cork]\"}]]]}],[\"sense\",{\"sn\":\"b\",\"sgram\":\"no obj\",\"dt\":[[\"text\",\"{bc}to make a short, loud noise \"],[\"vis\",[{\"t\":\"Guns were {it}popping{/it} in the distance.\"}]]]}]],[[\"sense\",{\"sn\":\"2\",\"dt\":[[\"text\",\"{bc}to cook (popcorn) \"],[\"wsgram\",\"+ obj\"],[\"vis\",[{\"t\":\"We {it}popped{/it} some popcorn in the microwave.\"}]],[\"wsgram\",\"no obj\"],[\"vis\",[{\"t\":\"The popcorn is done {it}popping{/it}.\"}]]]}]],[[\"sen\",{\"sn\":\"3\",\"sgram\":\"no obj\",\"sls\":[\"informal\"]}],[\"sense\",{\"sn\":\"a\",\"dt\":[[\"text\",\"{bc}to come from, into, or out of a place suddenly or briefly \"],[\"vis\",[{\"t\":\"I didn't mean to say that—it just {it}popped{/it} out.\"},{\"t\":\"Her shoulder {it}popped{/it} out of its socket.\"},{\"t\":\"He opened the box, and out {it}popped{/it} a mouse.\"},{\"t\":\"A funny thought just {it}popped{/it} into my head. [=I just thought of something funny]\"},{\"t\":\"The cathedral suddenly {it}popped{/it} into view. [=I could suddenly see the cathedral]\"},{\"t\":\"Her father {it}pops{/it} in and out of her life. [=her father is sometimes involved in her life and sometimes not]\"}]]]}],[\"sense\",{\"sn\":\"b\",\"lbs\":[\"always followed by an adverb or preposition\"],\"dt\":[[\"text\",\"{bc}to go to or from a place quickly, suddenly, or briefly \"],[\"vis\",[{\"t\":\"If you are busy, I can {it}pop{/it} back in later.\"},{\"t\":\"She {it}popped{/it} over for a cup of tea. = ({it}Brit{/it}) She {it}popped{/it} round for a cup of tea.\"},{\"t\":\"My neighbor {it}popped{/it} in for a visit.\"},{\"t\":\"I need to {it}pop{/it} into the drugstore for some film.\"},{\"t\":\"She {it}popped{/it} out for a minute. She should be back soon.\"},{\"t\":\"I'll {it}pop{/it} down to the post office during my break.\"}]]]}]],[[\"sense\",{\"sn\":\"4\",\"lbs\":[\"always followed by an adverb or preposition\"],\"sgram\":\"+ obj\",\"sls\":[\"informal\"],\"dt\":[[\"text\",\"{bc}to put (something) in, into, or onto a place suddenly or briefly \"],[\"vis\",[{\"t\":\"She {it}popped{/it} a CD in the player.\"},{\"t\":\"He {it}popped{/it} a quarter in the jukebox.\"},{\"t\":\"I {it}popped{/it} a grape into my mouth.\"},{\"t\":\"He {it}popped{/it} [={it}stuck{/it}] his head out the window.\"}]]]}]],[[\"sense\",{\"sn\":\"5\",\"dt\":[[\"snote\",[[\"t\",\"When your {phrase}ears pop{/phrase}, you feel a sudden change of pressure in your ears as you are going up or down in an airplane, on a steep road, etc.\"]]]]}]],[[\"sense\",{\"sn\":\"6\",\"dt\":[[\"snote\",[[\"t\",\"If your {phrase}eyes pop{/phrase}, they open very wide because you are surprised, afraid, excited, etc.\"],[\"vis\",[{\"t\":\"When I saw the new car, my {it}eyes{/it} practically {it}popped{/it} out of my head.\"}]]]]]}]],[[\"sense\",{\"sn\":\"7\",\"sgram\":\"+ obj\",\"sls\":[\"US\",\"informal\"],\"dt\":[[\"text\",\"{bc}to hit (someone) \"],[\"vis\",[{\"t\":\"I felt like {it}popping{/it} him (one).\"}]]]}]],[[\"sense\",{\"sn\":\"8\",\"sgram\":\"no obj\",\"sls\":[\"baseball\"],\"dt\":[[\"text\",\"{bc}to hit a pop fly \"],[\"vis\",[{\"t\":\"He {it}popped{/it} [={it}popped up{/it}] to the second baseman in the first inning.\"},{\"t\":\"The batter {phrase}popped out{/phrase}. [=hit a pop fly that was caught for an out]\"}]]]}]],[[\"sense\",{\"sn\":\"9\",\"sgram\":\"+ obj\",\"sls\":[\"US\",\"informal\"],\"dt\":[[\"text\",\"{bc}to open and drink (a bottle or can of beer) \"],[\"vis\",[{\"t\":\"They stopped at a bar to {it}pop{/it} a few beers after work.\"}]]]}]]]}"
    val domain =
      "{\"senseSequence\":[[{\"definingText\":{\"text\":[\"{bc}to suddenly break open or come away from something often with a short, loud noise \"],\"examples\":[{\"text\":\"The balloon {it}popped{/it}. [={it}burst{/it}]\"},{\"text\":\"We heard the sound of corks {it}popping{/it} as the celebration began.\"},{\"text\":\"One of the buttons {it}popped{/it} off my sweater.\"},{\"text\":\"Don't {it}pop{/it} that balloon!\"},{\"text\":\"She {it}popped{/it} the cork on the champagne. [=she opened the bottle of champagne by removing the cork]\"}]}},{\"definingText\":{\"text\":[\"{bc}to make a short, loud noise \"],\"examples\":[{\"text\":\"Guns were {it}popping{/it} in the distance.\"}]},\"senseSpecificGrammaticalLabel\":\"no obj\"}],[{\"definingText\":{\"text\":[\"{bc}to cook (popcorn) \"],\"examples\":[{\"text\":\"We {it}popped{/it} some popcorn in the microwave.\"},{\"text\":\"The popcorn is done {it}popping{/it}.\"}]}}],[{\"definingText\":{\"text\":[\"{bc}to come from, into, or out of a place suddenly or briefly \"],\"examples\":[{\"text\":\"I didn't mean to say that—it just {it}popped{/it} out.\"},{\"text\":\"Her shoulder {it}popped{/it} out of its socket.\"},{\"text\":\"He opened the box, and out {it}popped{/it} a mouse.\"},{\"text\":\"A funny thought just {it}popped{/it} into my head. [=I just thought of something funny]\"},{\"text\":\"The cathedral suddenly {it}popped{/it} into view. [=I could suddenly see the cathedral]\"},{\"text\":\"Her father {it}pops{/it} in and out of her life. [=her father is sometimes involved in her life and sometimes not]\"}]}},{\"definingText\":{\"text\":[\"{bc}to go to or from a place quickly, suddenly, or briefly \"],\"examples\":[{\"text\":\"If you are busy, I can {it}pop{/it} back in later.\"},{\"text\":\"She {it}popped{/it} over for a cup of tea. = ({it}Brit{/it}) She {it}popped{/it} round for a cup of tea.\"},{\"text\":\"My neighbor {it}popped{/it} in for a visit.\"},{\"text\":\"I need to {it}pop{/it} into the drugstore for some film.\"},{\"text\":\"She {it}popped{/it} out for a minute. She should be back soon.\"},{\"text\":\"I'll {it}pop{/it} down to the post office during my break.\"}]},\"labels\":[\"always followed by an adverb or preposition\"]}],[{\"definingText\":{\"text\":[\"{bc}to put (something) in, into, or onto a place suddenly or briefly \"],\"examples\":[{\"text\":\"She {it}popped{/it} a CD in the player.\"},{\"text\":\"He {it}popped{/it} a quarter in the jukebox.\"},{\"text\":\"I {it}popped{/it} a grape into my mouth.\"},{\"text\":\"He {it}popped{/it} [={it}stuck{/it}] his head out the window.\"}]},\"labels\":[\"always followed by an adverb or preposition\"],\"senseSpecificGrammaticalLabel\":\"+ obj\",\"subjectStatusLabels\":[\"informal\"]}],[{\"definingText\":{\"text\":[\"{bc}to hit (someone) \"],\"examples\":[{\"text\":\"I felt like {it}popping{/it} him (one).\"}]},\"senseSpecificGrammaticalLabel\":\"+ obj\",\"subjectStatusLabels\":[\"US\",\"informal\"]}],[{\"definingText\":{\"text\":[\"{bc}to hit a pop fly \"],\"examples\":[{\"text\":\"He {it}popped{/it} [={it}popped up{/it}] to the second baseman in the first inning.\"},{\"text\":\"The batter {phrase}popped out{/phrase}. [=hit a pop fly that was caught for an out]\"}]},\"senseSpecificGrammaticalLabel\":\"no obj\",\"subjectStatusLabels\":[\"baseball\"]}],[{\"definingText\":{\"text\":[\"{bc}to open and drink (a bottle or can of beer) \"],\"examples\":[{\"text\":\"They stopped at a bar to {it}pop{/it} a few beers after work.\"}]},\"senseSpecificGrammaticalLabel\":\"+ obj\",\"subjectStatusLabels\":[\"US\",\"informal\"]}]]}"

    it("can be read from JSON") {
      val definition = Json
        .parse(webster)
        .validate[WebsterDefinition]
        .get

      assert(definition.senseSequence.isDefined)
      assert(definition.verbDivider.isEmpty)

      val senseSequence = definition.senseSequence.get
      assert(senseSequence.length == 7)
    }

    it("can be written back out to JSON") {
      val input = Json
        .parse(webster)
        .validate[WebsterDefinition]
        .get
      val output = Json.toJson(input).toString()
      assert(output == domain)
    }
  }
}
