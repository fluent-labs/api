name: Build and Deploy

on:
  push:
    branches: master

jobs:
  build-api:
    runs-on: ubuntu-latest
    name: Build API
    steps:
    - uses: actions/checkout@v2.3.4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: foreign-language-reader-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" > api.txt

    - uses: actions/upload-artifact@master
      name: Upload container address
      with:
        name: api.txt
        path: api.txt

  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: [build-api]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@master
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show foreign-language-reader > $GITHUB_WORKSPACE/.kubeconfig

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update image in K8s
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: foreign-language-reader-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig \
            set image deployment/api api=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --record

      - name: Wait for deployment to finish
        run: |
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig \
            rollout status deployment/api