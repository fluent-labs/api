name: Build and Deploy

on:
  pull_request:
    types: [ closed ]
    branches: master

jobs:
  publish:
    name: Publish packages
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14.0.1
      - name: Configure git
        run: |
          git config --local user.email "release@foreignlanguagereader.com"
          git config --local user.name "Release"
      - name: Publish
        run: sbt "release with-defaults"

  build:
    runs-on: ubuntu-latest
    name: Build API
    needs: [publish]
    steps:
    - uses: actions/checkout@v2.3.4

    - name: Get release version
      run: echo "RELEASE_VERSION=`cat version.sbt | grep -Eo "[0-9\.]+"`" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v1.8.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Pull and rebuild dependencies image
      run: |
        docker pull lkjaero/foreign-language-reader-api:builder
        docker build . -f Dockerfile_builder -t lkjaero/foreign-language-reader-api:builder
        docker push lkjaero/foreign-language-reader-api:builder
    
    - name: Build container
      run: docker build . -t lkjaero/foreign-language-reader-api:LATEST

    - name: Enforce security rules
      id: scan
      uses: anchore/scan-action@v2
      with:
        image: "lkjaero/foreign-language-reader-api:LATEST"
        fail-build: true
        acs-report-enable: true

    - name: Push container
      run: |
        docker tag lkjaero/foreign-language-reader-api:LATEST lkjaero/foreign-language-reader-api:$RELEASE_VERSION
        docker push lkjaero/foreign-language-reader-api:$RELEASE_VERSION
        docker push lkjaero/foreign-language-reader-api:LATEST

  deploy:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@v2.1.0
        with:
          args: kubernetes cluster kubeconfig show foreign-language-reader > $GITHUB_WORKSPACE/.kubeconfig
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Update image in K8s
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: foreign-language-reader-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig \
            set image deployment/api api=registry.digitalocean.com/foreign-language-reader/api:$RELEASE_VERSION --record

      - name: Wait for deployment to finish
        run: |
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig \
            rollout status deployment/api