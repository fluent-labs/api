# https://www.playframework.com/documentation/latest/Configuration
include "secure"

# Application secret which comes from env variable
play.http.secret.key="changeme"
play.http.secret.key=${?APPLICATION_SECRET}

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

play.filters.enabled+=io.fluentlabs.api.metrics.RequestMetricsFilter
play.http.errorHandler = io.fluentlabs.api.error.ErrorHandler

play.filters.enabled += play.filters.cors.CORSFilter
play.filters.cors {
  allowedOrigins = ["https://www.fluentlabs.io", "https://preprod.fluentlabs.io", "http://localhost:8000"]
  allowedHttpMethods = ["GET", "POST"]
}

local = false
environment="local"
environment=${?ENVIRONMENT}

auth0 {
    domain = ""
    audience = ""
}

repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

database {
  profile = "slick.jdbc.H2Profile$"
  db {
    url = "jdbc:h2:mem:play;MODE=PostgreSQL;DB_CLOSE_DELAY=-1"
    driver = org.h2.Driver
    connectionPool = disabled
    keepAliveConnection = true
  }
}

database-context {
  fork-join-executor {
    parallelism-factor = 20.0
    parallelism-max = 200
  }
}

elasticsearch-context {
  fork-join-executor {
    parallelism-factor = 20.0
    parallelism-max = 200
  }
}
elasticsearch {
  scheme = "https"
  url = "localhost"
  port = 9200
  timeout = 5
  username = "local"
  password = "local"
}

language-service {
  context {
    fork-join-executor {
      parallelism-factor = 20.0
      parallelism-max = 200
    }
  }
  timeout = 5
  scheme = "http"
  url = "localhost"
  port = 8000
}

webster-context {
  fork-join-executor {
    parallelism-factor = 20.0
    parallelism-max = 200
  }
}
webster {
  timeout = 5
  learners = "mockkey"
  spanish = "mockkey"
}